
#!/usr/bin/python
#-----------------------------------------------------------------------------
# Name:        app.py [python3]
#
# Purpose:     This module is the main website host program to host the scheduled
#              tasks monitor Hub webpage by using python-Flask frame work. 
#  
# Author:      Yuancheng Liu
#
# Created:     2023/08/23
# version:     v0.1.2
# Copyright:   National Cybersecurity R&D Laboratories
# License:     
#-----------------------------------------------------------------------------
# CSS lib [bootstrap]: https://www.w3schools.com/bootstrap4/default.asp
# https://www.w3schools.com/howto/howto_css_form_on_image.asp
# https://medium.com/the-research-nest/how-to-log-data-in-real-time-on-a-web-page-using-flask-socketio-in-python-fb55f9dad100

import os
import threading

from datetime import timedelta 
from flask import Flask, render_template, flash, url_for, redirect, request, session
from werkzeug.utils import secure_filename
from flask_socketio import SocketIO, emit # pip install Flask-SocketIO==5.3.5

import ddosAtkHubGlobal as gv
async_mode = None

#-----------------------------------------------------------------------------
# Init the flask web app program.
def createApp():
    """ Create the flask App."""
    app = Flask(__name__)
    app.config['SECRET_KEY'] = gv.APP_SEC_KEY
    app.config['REMEMBER_COOKIE_DURATION'] = timedelta(seconds=gv.COOKIE_TIME)
    #app.config['UPLOAD_FOLDER'] = gv.UPLOAD_FOLDER
    # init the data manager
    # gv.iDataMgr = dataManager.DataManager(app)
    # if not gv.iDataMgr: exit()
    # gv.iDataMgr.start()
    return app

app = createApp()
socketio = SocketIO(app, async_mode=async_mode)
gv.iSocketIO = socketio
thread = None
threadLock = threading.Lock()

@app.route('/')
def index():
    posts = [{'id': "ssh-Attacker[192.168.50.33]",
             'type': 'url-post',
            'startT': '11:20:00',
            'endT': '13:10:10',
            'target': 'https://www.nus.edu.sg/canvas/login/',
            'state': 1}]

    return render_template('index.html', 
                           async_mode=socketio.async_mode, 
                           posts=posts)

#-----------------------------------------------------------------------------
if __name__ == '__main__':
    app.run(host="0.0.0.0", port=5000,  debug=False, threaded=True)
